{"version":3,"sources":["cqueue.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","deferred","resolver","undefined","rejecter","promise","Promise","resolve","reject","factory","Channel","require","this","queue","value","arg","defer","push","pop","version","exports","module","define","amd","cqueue","window"],"mappings":";;AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,OAajiB,SAAWkB,GAGT,QAASC,KACP,GAAIC,GAAWC,OACXC,EAAWD,OAEXE,EAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3CN,EAAWK,EACXH,EAAWI,GAGb,QAASD,QAASL,EAAUM,OAAQJ,EAAUC,QAASA,GA0CzD,QAASI,KACP,MAAO,IAAIC,SAtDb,GAAIJ,SAAUN,EAAOM,SAAWK,QAAQ,eAAeL,QAcnDI,QAAU,WACZ,QAASA,WACP9B,gBAAgBgC,KAAMF,SAEtBE,KAAKC,SAgCP,MA7BA7B,cAAa0B,UACXd,IAAK,MACLkB,MAAO,SAAaC,GAClB,GAAIC,GAAQf,GASZ,OAPKW,MAAKC,MAAMxB,OAId2B,EAAMT,SAAS,QAAS,QAHxBK,KAAKC,MAAMI,KAAKF,GAChBC,EAAMT,SAAS,WAAY,QAKtBS,EAAMX,WAGfT,IAAK,OACLkB,MAAO,WACL,GAAIE,GAAQf,GAQZ,OANKW,MAAKC,MAAMxB,OAGd2B,EAAMT,SAAS,WAAYK,KAAKC,MAAMK,QAFtCF,EAAMT,SAAS,QAAS,OAKnBS,EAAMX,YAIVK,UAOTD,GAAQU,QAAU,QAGK,mBAAZC,SACTC,OAAOD,QAAUX,EACU,kBAAXa,SAAyBA,OAAOC,IAChDD,OAAO,WACL,MAAOb,KAGTT,EAAOwB,OAASf,GAEC,mBAAXgB,QAAyBA,OAASzB","file":"cqueue.min.js","sourcesContent":["'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Channel queue with Promises\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2015\r\n * @license BSD-3-Clause\r\n * @link http://avoidwork.github.io/cqueue\r\n * @version 1.0.1\r\n */\n(function (global) {\n  var Promise = global.Promise || require('es6-promise').Promise;\n\n  function deferred() {\n    var resolver = undefined;\n    var rejecter = undefined;\n\n    var promise = new Promise(function (resolve, reject) {\n      resolver = resolve;\n      rejecter = reject;\n    });\n\n    return { resolve: resolver, reject: rejecter, promise: promise };\n  }\n\n  var Channel = (function () {\n    function Channel() {\n      _classCallCheck(this, Channel);\n\n      this.queue = [];\n    }\n\n    _createClass(Channel, [{\n      key: 'put',\n      value: function put(arg) {\n        var defer = deferred();\n\n        if (!this.queue.length) {\n          this.queue.push(arg);\n          defer.resolve(['continue', null]);\n        } else {\n          defer.resolve(['pause', null]);\n        }\n\n        return defer.promise;\n      }\n    }, {\n      key: 'take',\n      value: function take() {\n        var defer = deferred();\n\n        if (!this.queue.length) {\n          defer.resolve(['pause', null]);\n        } else {\n          defer.resolve(['continue', this.queue.pop()]);\n        }\n\n        return defer.promise;\n      }\n    }]);\n\n    return Channel;\n  })();\n\n  function factory() {\n    return new Channel();\n  }\n\n  factory.version = '1.0.1';\n\n  // Node, AMD & window supported\n  if (typeof exports !== 'undefined') {\n    module.exports = factory;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return factory;\n    });\n  } else {\n    global.cqueue = factory;\n  }\n})(typeof window !== 'undefined' ? window : global);\n"]}