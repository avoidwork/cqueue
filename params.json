{"name":"cqueue","tagline":"Channel queue with Promises","body":"# cqueue\r\n\r\ncqueue is a Channel queue for holding a msg/value until it's taken. Promises are used for concurrent operations against the queue.\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/cqueue.png)](http://travis-ci.org/avoidwork/cqueue)\r\n\r\n## How do I use it?\r\n\r\nPut something in the queue, and then take it at some point in the future. The queue can only hold one value, and the response will indicate what your machine should do, i.e. \"continue\" or \"pause\".\r\n\r\n```javascript\r\nconst cqueue = require(\"cqueue\");\r\nlet chan = cqueue();\r\n\r\nfunction handle (arg) {\r\n    console.log(arg[1] || \"empty\");\r\n}\r\n\r\nchan.take().then(handle); // \"empty\"\r\nchan.put(\"hello world\");\r\nchan.take().then(handle); // \"hello world\"\r\n```\r\n\r\n## API\r\n\r\n### queue\r\n#### Property\r\n\r\nArray which can hold 1 value\r\n\r\n### put\r\n#### Method\r\n\r\n Puts an item into the Channel, and the Promise receives an Array\r\n \r\n \tmethod put\r\n \tparam  {Mixed} arg Item\r\n \treturn {Object}    Promise\r\n\r\n```javascript\r\nchan.put(arg).then(function(state) {\r\n\tif (state[0] === \"continue\") {\r\n\t\t// arg was added to the channel\r\n\t} else {\r\n\t\t// arg is not in the channel\r\n\t}\r\n});\r\n```\r\n\r\n### take\r\n#### Method\r\n\r\nTakes an item from the Channel, and the Promise receives an Array\r\n\r\n\tmethod take\r\n \treturn {Object} Promise\r\n\r\n```javascript\r\nchan.take().then(function(state) {\r\n\tif (state[0] === \"continue\") {\r\n\t\t// state[1] was taken from the channel\r\n\t} else {\r\n\t\t// state[1] is null\r\n\t}\r\n});\r\n```\r\n\r\n## License\r\nCopyright (c) 2015 Jason Mulligan\r\nLicensed under the BSD-3 license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}