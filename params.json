{"name":"cqueue","tagline":"Channel queue with Promises","body":"cqueue is a Channel queue for holding a msg/value until it's taken. Promises are used for concurrent operations against the queue.\r\n\r\n## How do I use it?\r\n\r\nPut something in the queue, and then take it at some point in the future. The queue can only hold 1 value, and the response will indicate what your machine should do, i.e. \"continue\" or \"pause\".\r\n\r\n```javascript\r\nvar cqueue = require(\"cqueue\"),\r\n    chan   = cqueue();\r\n\r\nchan.take().then(function ( arg ) {\r\n\tif ( arg[1] === null ) {\r\n\t\tconsole.log(\"empty\");\r\n\t}\r\n});\r\n\r\nchan.put(\"hello world\");\r\n\r\nchan.take().then(function ( arg ) {\r\n\tconsole.log( arg );\r\n});\r\n```\r\n\r\n## API\r\n\r\n### queue\r\n#### Property\r\n\r\nArray which can hold 1 value\r\n\r\n### put\r\n#### Method\r\n\r\n Puts an item into the Channel\r\n \r\n \tmethod put\r\n \tparam  {Mixed} arg Item\r\n \treturn {Array}     Deferred\r\n\r\n```javascript\r\nchan.put(arg).then(function(state) {\r\n\tif (state[0] === \"continue\") {\r\n\t\t// arg was added to the channel\r\n\t}\r\n\telse {\r\n\t\t// arg is not in the channel\r\n\t}\r\n});\r\n```\r\n\r\n### take\r\n#### Method\r\n\r\nTakes an item from the Channel\r\n\r\n\tmethod take\r\n \treturn {Array} Deferred\r\n\r\n```javascript\r\nchan.take().then(function(state) {\r\n\tif (state[0] === \"continue\") {\r\n\t\t// state[1] was taken from the channel\r\n\t}\r\n\telse {\r\n\t\t// state[1] is null\r\n\t}\r\n});\r\n```\r\n\r\n## License\r\nCopyright (c) 2013 Jason Mulligan  \r\nLicensed under the BSD-3 license.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}